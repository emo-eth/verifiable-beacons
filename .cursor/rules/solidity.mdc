---
description: Solidity files
globs: *.sol
alwaysApply: false
---

# Your rule content

## Imports
- Prefer the `solady` dependency over `OpenZeppelin`
- OpenZeppelin imports should always use the path `openzeppelin-contracts/path/to/file.sol`, `openzeppelin-contracts-upgradeable/path/to/file.sol`, etc
- All remappings will be defined in [foundry.toml](mdc:foundry.toml)


## Errors
- Prefer `require(boolCondition, CustomError())` over `if (!boolCondition) { revert CustomError() }`
- **Never** use string errors, ie, `require(boolCondition, "Custom Error")`

## Storage
- When using EIP-7201 Namespaced Storage Layouts, use `$` as the storage variable, e.g., `MyStorage storage $ = MyStorageLib.getStorage()`.
- Prefer EIP-2701 namespaced storage over top-level storage definitions. Define in a separate file, `lib/MyContractStorage.sol` which should contain definitions for both `struct MyContractStorage` and `library MyContractStorageLib`. Importing contracts should access storage vars in functions by defining `MyConractStorage storage $ = MyContractStorageLib.getStorage()`;

## Upgradeable Contracts

- Prefer UUPS over TransparentUpgradeable proxies

## Test Helpers
- When making libraries that access "cheatcodes," `import {Vm\{,VmSafe\}} from "forge-std/Vm.sol"` and re-declare the `Vm vm =` variable

